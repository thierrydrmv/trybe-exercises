use('business');

db.restaurants.find()
db.restaurants.countDocuments({})

// 1.Selecione e faça a contagem dos restaurantes presentes nos bairros Queens, Staten Island e Bronx. (utilizando o atributo borough)
use('business');
db.restaurants.countDocuments({ borough: { $in : ['Bronx', 'Staten Island', 'Queens'] } })

// 2.Selecione e faça a contagem dos restaurantes que não possuem culinária do tipo American. (utilizando o atributo cuisine)
use('business');
db.restaurants.countDocuments({ cuisine: { $ne : 'American' } })

// 3.Selecione e faça a contagem dos restaurantes que possuem avaliação maior ou igual a 8. (utilizando o atributo rating)
use('business');
db.restaurants.countDocuments({ rating: { $gte : 8 } })

// 4.Selecione e faça a contagem dos restaurantes que possuem avaliação menor que 4.
use('business');
db.restaurants.countDocuments({ rating: { $lt : 4 } })

// 5.Selecione e faça a contagem dos restaurantes que não possuem as avaliações 5, 6 e 7.
use('business');
db.restaurants.countDocuments({ rating: { $nin : [5, 6, 7] } })

// 6.Selecione e faça a contagem dos restaurantes que não possuem avaliação menor ou igual a 5, 
// essa consulta também deve retornar restaurantes que não possuem o campo de avaliação.
use('business');
db.restaurants.countDocuments({ $nor: [{ rating: { $lte: 5}}]})

// 7.Selecione e faça a contagem dos restaurantes em que a avaliação seja maior ou igual a 6, ou restaurantes localizados no bairro Brooklyn.
use('business');
db.restaurants.countDocuments({ $or: [{ rating: { $gte: 6 }}, { borough: 'Brooklyn' }]})

// 8.Selecione e faça a contagem dos restaurantes localizados nos bairros Queens, Staten Island e Brooklyn e possuem avaliação maior que 4.
use('business');
db.restaurants.countDocuments({ $and: [ { borough: { $in: ['Queens', 'Staten Island', 'Brooklyn'] } }, { rating: { $gt: 4 } }] })

// 9.Selecione e faça a contagem dos restaurantes onde nem o campo avaliação seja igual a 1, nem o campo culinária seja do tipo American.
use('business');
db.restaurants.countDocuments({ $nor: [{ rating: 1 }, { cuisine: 'American' }] })
// 10.Selecione e faça a contagem dos restaurantes que satisfaçam ambas as condições a seguir:

// A avaliação seja maior que 6 OU menor que 10.
// Estejam localizados no bairro Brooklyn OU não possuam culinária do tipo Delicatessen.
use('business');
db.restaurants.countDocuments({ $and: [
  { $or: [{ rating: { $gt: 6 , $lte: 10 } }] },
  { $or: [{ borough: 'Brooklyn'}, { cuisine: { $ne: 'Delicatessen' } }] }
  ]})

// 11.Ordene alfabeticamente os restaurantes pelo nome (atributo name).
use('business');
db.restaurants.find({}, { name: 1 , _id: 0}).sort({ name: 1 });

// 12.Ordene os restaurantes de forma decrescente baseado nas avaliações.
use('business');
db.restaurants.find({}, { name: 1 , _id: 0, rating: 1}).sort({ rating: -1});

// 13.Remova o primeiro restaurante que possua culinária do tipo Ice Cream, Gelato, Yogurt, Ices.
use('business');
db.restaurants.deleteOne({ cuisine: 'Ice Cream, Gelato, Yogurt, Ices'})

// 14.Remova todos os restaurantes que possuem culinária do tipo American.
use('business');
db.restaurants.deleteMany({ cuisine: 'American' })